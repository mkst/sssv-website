{"version":3,"sources":["components/Header/index.js","components/Donut/index.js","panels/Info/index.js","pages/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","gradient","Donut","dataHook","selectedHook","data","selected","setSelected","DONUT_SIZE","canvasRef","useRef","useEffect","filtered","progress","filter","x","version","length","sections","proportions","rotation_offset","Math","PI","colors","canvas","current","context","getContext","clearRect","width","height","lineWidth","strokeStyle","angle","i","section","name","bytes","c","section_bytes","c_functions","total","segment_percentage","total_functions","filled_percentage_bytes","empty_percentage_bytes","xx","yy","midpoint","cos","sin","beginPath","arc","stroke","eventListener","e","offsetX","y","offsetY","dist","atan2","rotation","addEventListener","removeEventListener","console","log","id","ref","InfoPanel","useState","info","setInfo","description","setDescription","desired_section","funcs","total_funcs","code","total_code","funcs_percentage","code_percentage","toFixed","s","toUpperCase","slice","MainPage","latestData","setLatestData","fetch","then","resp","json","href","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbda17f1.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.scss'\n\nexport const Header = ({\n}) => {\n\n  return (\n    <div className='header'>\n  \t\t<div className='flex'>\n  \t\t\t<div className='bar-left'>\n  \t\t\t\t<div className='inner'>\n            <div className='text comic-sans-bold'>\n              SPACE STATION SILICON VALLEY\n            </div>\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \t\t\t<div className='bar-right'>\n  \t\t\t\t<div className='inner'>\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \t\t</div>\n  \t\t<div className='bottom'>\n  \t\t\t<div className='inner'>\n  \t\t\t\t<div className='text comic-sans-bold'>\n  \t\t\t\t\tDECOMPILATION PROJECT\n  \t\t\t\t</div>\n  \t\t\t\t<div className='flex marker-accent-container'>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent yellow' gradient='green-yellow'></div>\n  \t\t\t\t\t<div className='marker-accent yellow'></div>\n  \t\t\t\t\t<div className='marker-accent orange' gradient='yellow-orange'></div>\n  \t\t\t\t\t<div className='marker-accent red' gradient='orange-red'></div>\n  \t\t\t\t\t<div className='marker-accent red'></div>\n  \t\t\t\t\t<div className='marker-accent magenta' gradient='red-magenta'></div>\n  \t\t\t\t\t<div className='marker-accent purple' gradient='magenta-purple'></div>\n  \t\t\t\t\t<div className='marker-accent blue' gradient='purple-blue'></div>\n  \t\t\t\t\t<div className='marker-accent cyan' gradient='blue-cyan'></div>\n  \t\t\t\t\t<div className='marker-accent cyan'></div>\n  \t\t\t\t\t<div className='marker-accent blue' gradient='cyan-blue'></div>\n  \t\t\t\t\t<div className='marker-accent blue'></div>\n  \t\t\t\t\t<div className='marker-accent purple' gradient='blue-purple'></div>\n  \t\t\t\t\t<div className='marker-accent magenta' gradient='purple-magenta'></div>\n  \t\t\t\t\t<div className='marker-accent red' gradient='magenta-red'></div>\n  \t\t\t\t\t<div className='marker-accent orange' gradient='red-orange'></div>\n  \t\t\t\t\t<div className='marker-accent yellow' gradient='orange-yellow'></div>\n  \t\t\t\t\t<div className='marker-accent yellow'></div>\n  \t\t\t\t\t<div className='marker-accent green' gradient='yellow-green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-accent green'></div>\n  \t\t\t\t\t<div className='marker-end'>\n  \t\t\t\t\t\t<div className='glyph'>\n  \t\t\t\t\t\t\t:&#8593;&#8595;%\n  \t\t\t\t\t\t</div>\n  \t\t\t\t\t</div>\n  \t\t\t\t</div>\n  \t\t\t</div>\n  \t\t</div>\n  \t</div>\n  )\n}\n","import React, {useRef, useEffect, useState} from 'react'\n\nimport './Donut.scss'\n\nexport const Donut = ({\n  dataHook,\n  selectedHook\n}) => {\n\n  const [data, ] = dataHook\n  const [selected, setSelected] = selectedHook\n\n  const DONUT_SIZE = 220\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (data === null) {\n      return\n    }\n\n    const filtered = data.progress.filter(x => x.version == 'us')\n    if (filtered === null || filtered.length === 0) {\n      console.log('did not find requested version in data')\n      return\n    }\n    const sections = filtered[0].sections\n\n    if (sections.length !== 5) {\n      console.log('expected 5 sections')\n      return\n    }\n\n    const proportions = {\n      'main': 0.2,\n      'lib': 0.2,\n      'overlay1': 0.15,\n      'overlay2' : 0.45\n    }\n\n    const rotation_offset = Math.PI\n\n    const colors = [\n      // [filled, empty]\n      ['rgb(171,38,114)', 'rgb(61,11,42)'], // main\n      ['rgb(1,126,180)', 'rgb(3,54,74)'],   // lib\n      ['rgb(0,167,0)', 'rgb(0,86,0)'],      // overlay1\n      ['rgb(255,255,0)', 'rgb(67,67,0)']    // overlay2\n    ]\n\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    const x = DONUT_SIZE\n    const y = DONUT_SIZE\n    const radius = 150\n    const thickness = 60\n\n    context.lineWidth = thickness;\n    context.strokeStyle = 'rgba(0, 0, 0, 0)';\n\n    var angle = rotation_offset\n    for (var i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.section === 'all') {\n          // skip 'all' section\n          continue\n        }\n        const name = section.section\n        const bytes = section.c\n        const funcs = section.c_functions\n        const section_bytes = section.total\n        const section_funcs = section.total_functions\n\n        const segment_percentage = proportions[name]\n        const filled_percentage_bytes = (bytes / section_bytes) * segment_percentage\n        const empty_percentage_bytes = segment_percentage - filled_percentage_bytes\n\n        var xx = x\n        var yy = y\n\n        if (name === selected) {\n          const start = angle\n          const end = angle + (Math.PI * 2) * segment_percentage\n          const midpoint = (start + end) / 2\n          const x_offset = 30 * Math.cos(midpoint)\n          const y_offset = 30 * Math.sin(midpoint)\n          xx += x_offset\n          yy += y_offset\n        }\n        // filled\n        context.beginPath()\n        context.strokeStyle = colors[i][0]\n        context.arc(xx, yy, radius, angle, angle + (Math.PI * 2) * filled_percentage_bytes)\n        context.stroke()\n        angle += (Math.PI * 2) * filled_percentage_bytes\n        // empty\n\n        context.beginPath()\n        context.strokeStyle = colors[i][1]\n        context.arc(xx, yy, radius, angle, angle + (Math.PI * 2) * empty_percentage_bytes)\n        context.stroke()\n        angle += (Math.PI * 2) * empty_percentage_bytes\n    }\n\n    // handle hover\n    const eventListener = (e) => {\n      const x = e.offsetX - DONUT_SIZE\n      const y = e.offsetY - DONUT_SIZE\n\n      const dist = (x ** 2) + (y ** 2)\n\n      // radius is 150px, thickness is 60, so ring is 150 +-30px\n      if ((dist > (180 ** 2)) || (dist < 120 ** 2)) {\n        if (selected !== null) {\n          setSelected(null)\n        }\n        return\n      }\n\n      const angle = Math.atan2(y, x)\n      const rotation = (2*Math.PI) + (angle - rotation_offset)\n      if (rotation < 0.2 * (2*Math.PI)) {\n        // main\n        if (selected !== 'main') {\n          setSelected('main')\n        }\n      } else if (rotation < 0.4 * (2*Math.PI)) {\n        if (selected !== 'lib') {\n          setSelected('lib')\n        }\n      } else if (rotation < 0.55 * (2*Math.PI)) {\n        if (selected !== 'overlay1') {\n          setSelected('overlay1')\n        }\n      } else {\n        if (selected !== 'overlay2') {\n          setSelected('overlay2')\n        }\n      }\n    }\n\n    canvas.addEventListener('mousemove', eventListener)\n\n    return () => canvas.removeEventListener('mousemove', eventListener);\n\n  }, [data, selected])\n\n\n  return (\n    <div id='donut' className='doughnut'>\n      <canvas ref={canvasRef} width='440' height='440'/>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from 'react'\n\nimport './Info.scss'\n\nexport const InfoPanel = ({\n  dataHook,\n  selectedHook\n}) => {\n\n  const [data,] = dataHook\n  const [selected,] = selectedHook\n\n  const [info, setInfo] = useState(null)\n  const [description, setDescription] = useState(null)\n\n  useEffect(() => {\n    if (data === null) {\n      return\n    }\n\n    const desired_section = selected === null ? 'all' : selected\n\n    const filtered = data.progress.filter(x => x.version == 'us')\n    if (filtered === null || filtered.length === 0) {\n      console.log('Did not find requested version in data')\n      return\n    }\n    const sections = filtered[0].sections\n\n    const section = sections.filter(x => x.section === desired_section)\n    if (section === null || section.length === 0) {\n      console.log('Could not find section', desired_section)\n      return\n    }\n\n    const funcs = section[0].c_functions\n    const total_funcs = section[0].total_functions\n    const code = section[0].c\n    const total_code = section[0].total\n\n    const funcs_percentage = funcs / total_funcs * 100\n    const code_percentage = code / total_code * 100\n\n    setInfo(<div>\n        <div className='info-panel-entry'>\n          Functions: {funcs} / {total_funcs} ({funcs_percentage.toFixed(2)}%)\n        </div>\n        <div className='info-panel-entry'>\n          Bytes: {code} / {total_code}  ({code_percentage.toFixed(2)}%)\n        </div>\n      </div>)\n\n  }, [data, selected])\n\n  useEffect(() => {\n    var desc = ''\n    if (selected === 'main') {\n      desc = 'Initialisation logic'\n    } else if (selected === 'lib') {\n      desc = 'Library code inc libultra'\n    } else if (selected === 'overlay1') {\n      desc = 'Introduction code'\n    } else if (selected === 'overlay2') {\n      desc = 'Core game logic'\n    } else {\n      desc = 'Total decomp progress'\n    }\n    setDescription(desc)\n  }, [selected])\n\n  const capitalise = s => {\n    return s && s[0].toUpperCase() + s.slice(1);\n  }\n\n  return (\n    <div id='info' className='info-panel comic-sans'>\n      <div className='info-panel-heading comic-sans-bold'>\n        {selected === null ? 'Overview' : capitalise(selected)}\n      </div>\n      <div className='info-panel-description'>\n        {description}\n      </div>\n      <div className='info-panel-data'>\n        {info}\n      </div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\n\nimport {Header} from '../../components/Header'\nimport {Donut} from '../../components/Donut'\nimport {InfoPanel} from '../../panels/Info'\n\nimport './Main.scss'\n\n\nexport const MainPage = () => {\n\n  const [latestData, setLatestData] = useState(null)\n  const [selected, setSelected] = useState(null)\n\n  // const [historicData, setHistoricData] = useState(null)\n\n  useEffect(() => {\n    fetch('/latest.json')\n    .then(resp => resp.json())\n    .then(setLatestData)\n  }, [setLatestData])\n\n  // useEffect(() => {\n  //   fetch('/commits.json')\n  //   .then(resp => resp.json())\n  //   .then(setHistoricData)\n  // }, [setHistoricData])\n\n  return (\n    <div>\n    <div className='wrapper'>\n      <div className='stars' />\n      <div className='container'>\n        <Header />\n        <div className='progress'>\n          <Donut dataHook={[latestData,]} selectedHook={[selected, setSelected]} />\n          <InfoPanel dataHook={[latestData,]} selectedHook={[selected,]} />\n        </div>\n      </div>\n    </div>\n    <div className='footer'>\n      <a href='https://github.com/mkst/sssv/' target='_blank'>GitHub</a>\n    </div>\n    </div>\n  )\n}\n","import {MainPage} from './pages/Main'\n\nimport './App.scss'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}